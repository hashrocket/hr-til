= content_for :head, auto_discovery_link_tag(:atom, root_path(format: "atom"))

- if params[:q].present?
  %section#search
    %header.page_head
      %h1
        #{pluralize @posts.count, "post"}
        about #{params[:q]}

%section#home
  - @posts.each do |post|
    %article.post{ :class => unless post.published? then 'draft' end }
      %section.copy
        %h1= link_to post.title, post
        = find_and_preserve markdown_render post.body
        %footer
          %nav
            = content_for :post_nav
            - unless post.published?
              %p Draft Post
          %p= link_to post.display_date.strftime("%B %-e, %Y"), post
      %aside
        %ul
          %li
            = link_to post.developer do
              more by
              %b= post.developer_username
          %li
            %b
              = link_to post.channel, class: post.channel_name do
                \##{post.channel_name}
          - if editable?(post)
            %li
              = link_to [:edit, post], class: "edit" do
                %b edit this post
          %li
            = link_to [post, format: 'md'], class: "edit", target: "_blank" do
              %b view raw
          - unless post.draft?
            %li
              = link_to post_path(post), class: "js-like-action like", id: post.slug do
                liked
                %b= pluralize(post.likes, "time")
        = content_for :social
%nav.pagination
  = link_to_previous_page @posts, "&larr; newer TILs".html_safe, class: "pagination_newer"
  = link_to_next_page @posts, "older TILs &rarr;".html_safe, class: "pagination_older"
